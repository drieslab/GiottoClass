% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NN_network.R
\name{createNearestNetwork}
\alias{createNearestNetwork}
\title{createNearestNetwork}
\usage{
createNearestNetwork(
  gobject,
  spat_unit = NULL,
  feat_type = NULL,
  type = c("sNN", "kNN"),
  dim_reduction_to_use = "pca",
  dim_reduction_name = NULL,
  dimensions_to_use = seq_len(10),
  feats_to_use = NULL,
  expression_values = c("normalized", "scaled", "custom"),
  name = NULL,
  return_gobject = TRUE,
  k = 30,
  minimum_shared = 5,
  top_shared = 3,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{gobject}{giotto object}

\item{spat_unit}{spatial unit (e.g. "cell")}

\item{feat_type}{feature type (e.g. "rna", "dna", "protein")}

\item{type}{sNN or kNN}

\item{dim_reduction_to_use}{dimension reduction method to use}

\item{dim_reduction_name}{name of dimension reduction set to use}

\item{dimensions_to_use}{number of dimensions to use as input}

\item{feats_to_use}{if dim_reduction_to_use = NULL, which genes to use}

\item{expression_values}{expression values to use}

\item{name}{arbitrary name for NN network. Defaults to
[type].[dim_reduction_to_use]}

\item{return_gobject}{boolean: return giotto object (default = TRUE)}

\item{k}{number of k neighbors to use}

\item{minimum_shared}{minimum shared neighbors}

\item{top_shared}{keep at ...}

\item{verbose}{be verbose}

\item{...}{additional parameters for kNN and sNN functions from dbscan}
}
\value{
giotto object with updated NN network
}
\description{
create a nearest neighbour (NN) network
}
\details{
This function creates a k-nearest neighbour (kNN) or shared
nearest neighbour (sNN) network based on the provided dimension reduction
space. To run it directly on the gene expression matrix
set \emph{dim_reduction_to_use = NULL}.

See also \code{\link[dbscan]{kNN}} and \code{\link[dbscan]{sNN}} for more
information about how the networks are created.

Output for kNN:
\itemize{
\item{from: }{cell_ID for source cell}
\item{to: }{cell_ID for target cell}
\item{distance: }{distance between cells}
\item{weight: }{weight = 1/(1 + distance)}
}

Output for sNN:
\itemize{
\item{from: }{cell_ID for source cell}
\item{to: }{cell_ID for target cell}
\item{distance: }{distance between cells}
\item{weight: }{1/(1 + distance)}
\item{shared: }{number of shared neighbours}
\item{rank: }{ranking of pairwise cell neighbours}
}
For sNN networks two additional parameters can be set:
\itemize{
\item{minimum_shared: }{minimum number of shared neighbours needed}
\item{top_shared: }{keep this number of the top shared neighbours,
irrespective of minimum_shared setting}
}
}
\examples{
g <- GiottoData::loadGiottoMini("visium")

createNearestNetwork(g)
}
