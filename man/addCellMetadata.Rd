% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auxilliary.R
\name{addCellMetadata}
\alias{addCellMetadata}
\title{Add cell metadata}
\usage{
addCellMetadata(
  gobject,
  spat_unit = NULL,
  feat_type = NULL,
  new_metadata,
  vector_name = NULL,
  by_column = FALSE,
  column_cell_ID = NULL
)
}
\arguments{
\item{gobject}{giotto object}

\item{spat_unit}{spatial unit}

\item{feat_type}{feature type}

\item{new_metadata}{new cell metadata to use (data.table, data.frame, vector, factor, ...)}

\item{vector_name}{(optional) custom name for new metadata column if single
vector or factor is provided}

\item{by_column}{merge metadata based on \emph{cell_ID} column in
\code{\link{pDataDT}} (default = FALSE)}

\item{column_cell_ID}{column name of new metadata to use if
\code{by_column = TRUE}}
}
\value{
giotto object
}
\description{
Adds cell metadata to the giotto object
}
\details{
You can add additional cell metadata in several manners:
\itemize{
\item{1. Provide a data.frame-like object, vector, or factor with cell annotations in the same order as the \emph{cell_ID} column in pDataDT(gobject). This is a bit risky and not the most recommended.}
\item{2. Provide a data.frame-like object with cell annotations and specify which column contains the cell IDs, these cell IDs need to match with the \emph{cell_ID} column in pDataDT(gobject)}
\item{3. Provide a vector or factor that is named with the cell IDs they correspond to. These names will be matched against the \emph{cell_ID} column in pDataDT(gobject).}
}
}
\examples{
# dummy matrix
m <- readRDS(system.file("extdata/toy_matrix.RDS", package = "GiottoClass"))
g <- createGiottoObject(m)

pDataDT(g)

# appending a character vector, merge on vector names
v <- seq(10)
names(v) <- sample(LETTERS[seq(10)])
force(v)

g <- addCellMetadata(g, new_metadata = v, by_column = TRUE)
pDataDT(g)

# appending a data.frame, merge on specified column "ID"
df <- data.frame(
    IDS = rev(LETTERS[seq(10)]), # reversed
    l = letters[seq(10)],
    x = c(rep(TRUE, 5), rep(FALSE, 5))
)
force(df)

g <- addCellMetadata(
    g,
    new_metadata = df,
    by_column = TRUE,
    column_cell_ID = "IDS"
)
pDataDT(g)
}
