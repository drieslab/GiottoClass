% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create.R
\name{create_giotto}
\alias{create_giotto}
\alias{createGiottoObject}
\alias{createGiottoObjectSubcellular}
\title{Create a giotto object}
\usage{
createGiottoObject(
  expression,
  expression_feat = "rna",
  spatial_locs = NULL,
  spatial_info = NULL,
  calc_poly_centroids = FALSE,
  centroids_to_spatlocs = FALSE,
  feat_info = NULL,
  cell_metadata = NULL,
  feat_metadata = NULL,
  spatial_network = NULL,
  spatial_grid = NULL,
  spatial_grid_name = NULL,
  spatial_enrichment = NULL,
  dimension_reduction = NULL,
  nn_network = NULL,
  images = NULL,
  largeImages = NULL,
  offset_file = NULL,
  instructions = NULL,
  cores = determine_cores(),
  raw_exprs = NULL,
  expression_matrix_class = c("dgCMatrix", "DelayedArray"),
  h5_file = NULL,
  verbose = FALSE
)

createGiottoObjectSubcellular(
  gpolygons = NULL,
  polygon_mask_list_params = NULL,
  polygon_dfr_list_params = NULL,
  gpoints = NULL,
  cell_metadata = NULL,
  feat_metadata = NULL,
  spatial_network = NULL,
  spatial_network_name = NULL,
  spatial_grid = NULL,
  spatial_grid_name = NULL,
  spatial_enrichment = NULL,
  spatial_enrichment_name = NULL,
  dimension_reduction = NULL,
  nn_network = NULL,
  images = NULL,
  largeImages = NULL,
  largeImages_list_params = NULL,
  instructions = NULL,
  cores = NA,
  verbose = FALSE
)
}
\arguments{
\item{expression}{expression information}

\item{expression_feat}{available features (e.g. rna, protein, ...)}

\item{spatial_locs}{data.table or data.frame with coordinates for cell
centroids}

\item{spatial_info}{list of giotto polygon objects with spatial information,
see \code{\link{createGiottoPolygonsFromMask}}
and \code{\link{createGiottoPolygonsFromDfr}}}

\item{calc_poly_centroids}{if spatial_info is provided, whether to also
calculate centroids}

\item{centroids_to_spatlocs}{if spatial_info is provided, whether to also
convert centroids to spatial locations}

\item{feat_info}{list of giotto point objects with feature info,
see \code{\link{createGiottoPoints}}}

\item{cell_metadata}{cell annotation metadata}

\item{feat_metadata}{feature annotation metadata for each unique feature}

\item{spatial_network}{list of spatial network(s)}

\item{spatial_grid}{list of spatial grid(s)}

\item{spatial_grid_name}{list of spatial grid name(s)}

\item{spatial_enrichment}{list of spatial enrichment score(s) for each
spatial region}

\item{dimension_reduction}{list of dimension reduction(s)}

\item{nn_network}{list of nearest neighbor network(s)}

\item{images}{list of images}

\item{largeImages}{deprecated}

\item{offset_file}{file used to stitch fields together (optional)}

\item{instructions}{list of instructions or output result
from \code{\link{createGiottoInstructions}}}

\item{cores}{how many cores or threads to use to read data if paths are
provided}

\item{raw_exprs}{deprecated, use expression}

\item{expression_matrix_class}{class of expression matrix to
use (e.g. 'dgCMatrix', 'DelayedArray')}

\item{h5_file}{path to h5 file}

\item{verbose}{be verbose when building Giotto object}

\item{gpolygons}{giotto polygons}

\item{polygon_mask_list_params}{list parameters
for \code{\link{createGiottoPolygonsFromMask}}}

\item{polygon_dfr_list_params}{list parameters
for \code{\link{createGiottoPolygonsFromDfr}}}

\item{gpoints}{giotto points}

\item{spatial_network_name}{list of spatial network name(s)}

\item{spatial_enrichment_name}{list of spatial enrichment name(s)}

\item{largeImages_list_params}{image params when loading largeImages as list}
}
\value{
\code{giotto} object
}
\description{
\code{giotto} objects can represent and work with datasets that are:
\itemize{
\item Already aggregated \emph{(in the form of a pair of expression matrix and spatial
centroids) + (optional) associated analyses}
\item Subcellular \emph{(polygon/mask annotations and point detections
e.g. transcripts or polygon/mask annotations and raw intensity staining
images (e.g. protein stains)). + (optional) associated aggregate data}
\item Multiple sets/combinations of the previous two belonging to the same
experiment, organized by \link{giotto_schema}
}

A \code{giotto} analysis object can be generated in several ways:
\itemize{
\item In one step \emph{(with \code{createGiottoObject()} and input data)}.
\item A piecewise manner where you start with just an empty \code{giotto} object
that you append to \emph{(either using \code{createGiottoObject()} with no params or
a call to the class  constructor function \code{giotto()} - see piecewise
creation section and examples)}.
\item Via technology specific convenience functions \emph{(exported from \{Giotto\})}
}

See \url{https://drieslab.github.io/Giotto_website/articles/object_creation.html}
for more information. The details sections here also expand on the above
options.
}
\section{single step creation (conventional)}{


[\strong{Requirements}] To use this method, you need to provide at least
a matrix with genes as row names and cells as column names. This matrix can
be provided as a base matrix, sparse Matrix, data.frame, data.table or as a
path to any of those. To include spatial information about
cells (or regions) you need to provide a matrix, data.table or
data.frame (or path to them) with coordinates for all spatial dimensions.
This can be 2D (x and y) or 3D (x, y, x).
The row order for the cell coordinates should be the same as the column
order for the provided expression data.

[\strong{Instructions}] Additionally an instruction file, generated manually or
with \code{\link{createGiottoInstructions}} can be provided to instructions,
if not a default instruction file will be created for the Giotto object.

[\strong{Multiple fields}] In case a dataset consists of multiple fields, like
seqFISH+ for example, an offset file can be provided to stitch the different
fields together. \code{\link{stitchFieldCoordinates}} can be used to
generate such an offset file.

[\strong{Processed data}] Processed count data, such as normalized data, can
be provided using one of the different expression
slots (norm_expr, norm_scaled_expr, custom_expr).

[\strong{Metadata}] Cell and gene metadata can be provided using the cell and
gene metadata slots. This data can also be added afterwards using
the \code{\link{addFeatMetadata}} or \code{\link{addCellMetadata}} functions.

[\strong{Other information}] Additional information can be provided through
the appropriate slots:
\itemize{
\item{spatial networks}
\item{spatial grids}
\item{spatial enrichments}
\item{dimensions reduction}
\item{nearest neighbours networks}
\item{images}
}

\code{createGiottoObjectSubcellular()} is another variant of this functionality
that specializes in starting from polygon (e.g. cell annotations) and
points (e.g. transcripts) information, but it is a legacy function. It is
usually most convenient to work with piecewise creation.
}

\section{piecewise creation (most flexible)}{

Giotto converts input data into compatible subobjects (\code{exprObj},
\code{giottoPolygon}, \code{giottoPoints}, etc). These subobjects can be created using
the relevant \verb{create*} functions. They can then directly be used to assemble
a \code{giotto} object.
\enumerate{
\item Create an empty \code{giotto} object (either use \code{createGiottoObject()} with
no params or the class constructor \code{giotto()})
\item Either append created subobjects one by one or all at once as a \code{list} of
subobjects.
}

\preformatted{
# pseudocode with giotto object and created subobjects:

# Start with an empty giotto object
g <- giotto()

# Data (subobjects) can then be added one by one.
g <- setGiotto(g, polys)
g <- setGiotto(g, transcripts)
g <- setGiotto(g, imgs)
g <- setGiotto(g, expression)
g <- setGiotto(g, cell_meta)

# alternatively as a list
g <- setGiotto(g, list(polys, transcripts, imgs, expression, cell_meta))
}
}

\section{technology specific}{

There are several convenience functions we provide for loading in data from
popular platforms. These functions are exported from \{Giotto\} instead of
this package. They take care of reading the expected output
folder structures, auto-detecting where needed data items are, formatting
items for ingestion, then object creation.

\preformatted{
# some examples are:
Giotto::createGiottoVisiumObject()
Giotto::createGiottoXeniumObject()
Giotto::createGiottoVisiumHDObject()
Giotto::createGiottoCosMxObject()
}

Also see \url{https://drieslab.github.io/Giotto_website/articles/import_utilities.html}
for technology-specific import utilities that can be used with the piecewise
\code{giotto} object assembly method.
}

\examples{
# create an empty object
g <- createGiottoObject
# (can also use the class generator function)
g <- giotto()

# create an object containing an expression matrix
expr_matrix <- readRDS(system.file("extdata/toy_matrix.RDS",
    package = "GiottoClass"
))

createGiottoObject(expression = expr_matrix)

x_gpolygons <- GiottoData::loadSubObjectMini("giottoPolygon")
x_gpoints <- GiottoData::loadSubObjectMini("giottoPoints")

createGiottoObjectSubcellular(
    gpolygons = x_gpolygons,
    gpoints = x_gpoints
)
}
\concept{giotto}
