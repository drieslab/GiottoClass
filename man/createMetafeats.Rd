% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auxilliary.R
\name{createMetafeats}
\alias{createMetafeats}
\title{createMetafeats}
\usage{
createMetafeats(
  gobject,
  spat_unit = NULL,
  feat_type = NULL,
  expression_values = c("normalized", "scaled", "custom"),
  feat_clusters,
  name = "metafeat",
  return_gobject = TRUE
)
}
\arguments{
\item{gobject}{Giotto object}

\item{spat_unit}{spatial unit}

\item{feat_type}{feature type}

\item{expression_values}{expression values to use}

\item{feat_clusters}{numerical vector with features as names}

\item{name}{name of the metagene results}

\item{return_gobject}{return giotto object}
}
\value{
giotto object
}
\description{
This function creates an average metafeat/metagene/module
for clusters.
}
\details{
An example for the 'gene_clusters' could be like this:
cluster_vector = c(1, 1, 2, 2)
names(cluster_vector) = c('geneA', 'geneB', 'geneC', 'geneD')
}
\examples{
# load a dataset
g <- GiottoData::loadGiottoMini("viz")
# set a spat unit to use
activeSpatUnit(g) <- "aggregate"

# create the metafeats
# We do this by making an annotation vector which is a numerical vector
# of cluster assignments where each number is named by the feature it
# describes.
#
# Here we create an example annotation vector by arbitrarily using the
# first 6 features and putting 3 in cluster 1 and the other 3 in cluster 2.

feats_to_use <- featIDs(g)[seq_len(6)]
clust_to_use <- c(1, 1, 1, 2, 2, 2)
names(clust_to_use) <- feats_to_use

# show
clust_to_use

g <- createMetafeats(
    gobject = g,
    feat_clusters = clust_to_use,
    name = "new_metagene"
)
}
\seealso{
\code{\link[GiottoVisuals:spatCellPlot]{GiottoVisuals::spatCellPlot()}}
}
