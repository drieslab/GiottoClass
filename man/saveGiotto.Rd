% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/save_load.R
\name{saveGiotto}
\alias{saveGiotto}
\title{saveGiotto}
\usage{
saveGiotto(
  gobject,
  foldername = "saveGiottoDir",
  dir = getwd(),
  method = c("RDS", "qs"),
  method_params = list(),
  overwrite = FALSE,
  image_filetype = "PNG",
  include_feat_coord = TRUE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{gobject}{Giotto object}

\item{foldername}{Folder name}

\item{dir}{Directory where to create the folder}

\item{method}{method to save main object}

\item{method_params}{additional method parameters for RDS or qs}

\item{overwrite}{Overwrite existing folders}

\item{image_filetype}{the image filetype to use, see
\code{\link[terra]{writeRaster}}. Default is "PNG". For TIFF outputs, try
"COG"}

\item{include_feat_coord}{logical. Whether to keep the feature coordinates
when saving. Dropping them can improve performance for large datasets.}

\item{verbose}{be verbose}

\item{...}{additional parameters for \code{\link[terra]{writeRaster}}}
}
\value{
Creates a directory with Giotto object information
}
\description{
Saves a Giotto object to a specific folder structure
}
\details{
Works together with \code{\link{loadGiotto}} to save and re-load
Giotto objects. Additional method_params need to be provided as a list
and will go to \code{\link[base]{saveRDS}} or \code{\link[qs]{qsave}}
}
\examples{
g <- GiottoData::loadGiottoMini("visium")

saveGiotto(gobject = g, dir = tempdir(), overwrite = TRUE)
}
